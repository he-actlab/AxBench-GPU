

if [ ! -d "./bin" ];then 	\
		mkdir bin;				\
	fi
if [ ! -d "./obj" ];then 	\
		mkdir obj;				\
	fi
python /home/yazdan/phd/projects/many.npu/parrot.c/src/ParrotObserver/plang.py -c /home/yazdan/phd/projects/many.npu/parrot.c/src/ParrotObserver/ParrotC.json -a observe -e "nvcc -O3  -I -I/usr/local/include -Isrc -I/usr/local/cuda/include -I/home/yazdan/NVIDIA_CUDA-6.5_Samples/common/inc -I../../common/inc  -gencode arch=compute_20,code=compute_20 -lcuda -lcudart -I/home/yazdan/phd/projects/many.npu/parrot.c/src/ParrotLib -c" -s "src/main.cu" -o "obj/jmeint.o" -t
cppParser
[([(570, 570), ['jmeint_kernel']], [(574, 574), ['jmeint_kernel']])]
--------------------------------
[18]<-1.0; 1.0>parrotInput
['parrotInput', '18', '-1.0', ' 1.0']
('parrotInput', '18', ('-1.0', '1.0'))
--------------------------------
[1]<0.0; 0.9>parrotOutput
['parrotOutput', '1', '0.0', ' 0.9']
('parrotOutput', '1', ('0.0', '0.9'))
{
    "jmeint_kernel": {
        "InputRangeB": 1.0,
        "InputRangeA": -1.0,
        "OutputRangeB": 0.9,
        "OutputRangeA": 0.0,
        "nOutputs": "1",
        "nInputs": "18"
    }
}
Parrot Observer
nvcc -O3  -I -I/usr/local/include -Isrc -I/usr/local/cuda/include -I/home/yazdan/NVIDIA_CUDA-6.5_Samples/common/inc -I../../common/inc  -gencode arch=compute_20,code=compute_20 -lcuda -lcudart -I/home/yazdan/phd/projects/many.npu/parrot.c/src/ParrotLib -c obj/jmeint.o.parroto.cu -o obj/jmeint.o
mv obj/jmeint.o.parroto.cu obj/jmeint.o.parroto.cu.tmp
#nvcc -O3  -I -I/usr/local/include -Isrc -I/usr/local/cuda/include -L -L/usr/local/lib -L/home/yazdan/phd/projects/many.npu/parrot.c/src/ParrotLib -L/usr/local/cuda/lib -o obj/jmeint.o -c src/main.cu
nvcc -O3 -I -I/usr/local/include -Isrc -I/usr/local/cuda/include -L -L/usr/local/lib -L/home/yazdan/phd/projects/many.npu/parrot.c/src/ParrotLib -L/usr/local/cuda/lib -o ./bin/jmeint.out obj/jmeint.o
/usr/bin/ld: skipping incompatible /usr/local/cuda/lib/libcudadevrt.a when searching for -lcudadevrt
/usr/bin/ld: skipping incompatible /usr/local/cuda/lib/libcudart_static.a when searching for -lcudart_static
